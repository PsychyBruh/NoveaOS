import*as e from"../../../core/common/common.js";import*as t from"../helpers/helpers.js";import*as o from"../render_coordinator/render_coordinator.js";import*as r from"../../lit-html/lit-html.js";const n=new CSSStyleSheet;n.replaceSync(":host{position:absolute;left:0;top:0;width:100%;height:100%}.gamut-line{stroke:color-mix(in sRGB,var(--ref-palette-neutral100) 50%,transparent);fill:none}.label{position:absolute;bottom:3px;margin-right:5px;color:color-mix(in sRGB,var(--ref-palette-neutral100) 50%,transparent)}\n/*# sourceURL=srgbOverlay.css */\n");const s=o.RenderCoordinator.RenderCoordinator.instance();function l(t){const o=e.Color.hsva2rgba([...t,1]),r=e.ColorConverter.ColorConverter.displayP3ToXyzd50(o[0],o[1],o[2]);return e.ColorConverter.ColorConverter.xyzd50ToSrgb(r[0],r[1],r[2]).every((e=>e+.001>=0&&e-.001<=1))}class i extends HTMLElement{static litTagName=r.literal`devtools-spectrum-srgb-overlay`;#e=this.attachShadow({mode:"open"});constructor(){super(),this.#e.adoptedStyleSheets=[n]}#t({hue:e,width:t,height:o}){if(0===t||0===o)return null;const r=1/window.devicePixelRatio,n=[];let s=0;for(let i=0;i<o;i+=r){const a=1-i/o;for(;s<t;s+=r){if(!l([e,s/t,a])){n.push({x:s,y:i});break}}}if(0===n.length)return null;const i=n[n.length-1];return i.x<t&&n.push({y:i.y,x:t}),n}#o(e,t){let o=1/0,r=null;for(const n of e)Math.abs(t-n.y)<=o&&(o=Math.abs(t-n.y),r=n);return r}render({hue:e,width:t,height:o}){return s.write("Srgb Overlay render",(()=>{const n=this.#t({hue:e,width:t,height:o});if(!n||0===n.length)return;const s=this.#o(n,o-13);s&&r.render(r.html`
          <span class="label" style="right: ${t-s.x}px">sRGB</span>
          <svg>
            <polyline points=${n.map((e=>`${e.x.toFixed(2)},${e.y.toFixed(2)}`)).join(" ")} class="gamut-line" />
          </svg>
        `,this.#e,{host:this})}))}}t.CustomElements.defineComponent("devtools-spectrum-srgb-overlay",i);var a=Object.freeze({__proto__:null,SrgbOverlay:i});export{a as SrgbOverlay};

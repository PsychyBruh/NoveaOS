import*as e from"../../../core/common/common.js";import*as t from"../../../core/host/host.js";import*as r from"../../../core/sdk/sdk.js";import*as o from"../../lit-html/lit-html.js";import*as s from"../../visual_logging/visual_logging.js";import*as n from"../helpers/helpers.js";const h=new CSSStyleSheet;h.replaceSync(".link{color:var(--sys-color-primary);text-decoration:underline;cursor:pointer;outline-offset:2px}\n/*# sourceURL=chromeLink.css */\n");class i extends HTMLElement{static litTagName=o.literal`devtools-chrome-link`;#e=this.attachShadow({mode:"open"});#t=this.#r.bind(this);#o="";connectedCallback(){this.#e.adoptedStyleSheets=[h],n.ScheduledRender.scheduleRender(this,this.#t)}set href(t){if(!e.ParsedURL.schemeIs(t,"chrome:"))throw new Error("ChromeLink href needs to start with 'chrome://'");this.#o=t,n.ScheduledRender.scheduleRender(this,this.#t)}#s(e){const o=r.TargetManager.TargetManager.instance().rootTarget();if(null===o)return;const s=this.#o;o.targetAgent().invoke_createTarget({url:s}).then((e=>{e.getError()&&t.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(s)})),e.consume(!0)}#r(){o.render(o.html`
        <a href=${this.#o} class="link" target="_blank"
          jslog=${s.link().track({click:!0}).context(this.#o)}
          @click=${this.#s}><slot></slot></a>
      `,this.#e,{host:this})}}n.CustomElements.defineComponent("devtools-chrome-link",i);var l=Object.freeze({__proto__:null,ChromeLink:i});export{l as ChromeLink};

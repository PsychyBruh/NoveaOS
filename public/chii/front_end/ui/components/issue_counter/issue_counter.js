import*as e from"../../../core/common/common.js";import*as s from"../../../core/i18n/i18n.js";import*as i from"../../../models/issues_manager/issues_manager.js";import*as t from"../helpers/helpers.js";import*as o from"../../lit-html/lit-html.js";import*as n from"../icon_button/icon_button.js";import*as r from"../render_coordinator/render_coordinator.js";import*as a from"../../visual_logging/visual_logging.js";const l=new CSSStyleSheet;l.replaceSync(":host{white-space:normal;display:inline-block}\n/*# sourceURL=issueCounter.css */\n");const u={pageErrors:"{issueCount, plural, =1 {# page error} other {# page errors}}",breakingChanges:"{issueCount, plural, =1 {# breaking change} other {# breaking changes}}",possibleImprovements:"{issueCount, plural, =1 {# possible improvement} other {# possible improvements}}"},c=s.i18n.registerUIStrings("ui/components/issue_counter/IssueCounter.ts",u),h=s.i18n.getLocalizedString.bind(void 0,c);function d(e){switch(e){case i.Issue.IssueKind.PageError:return{iconName:"issue-cross-filled",color:"var(--icon-error)",width:"20px",height:"20px"};case i.Issue.IssueKind.BreakingChange:return{iconName:"issue-exclamation-filled",color:"var(--icon-warning)",width:"20px",height:"20px"};case i.Issue.IssueKind.Improvement:return{iconName:"issue-text-filled",color:"var(--icon-info)",width:"20px",height:"20px"}}}function m({iconName:e,color:s,width:i,height:t},o){return o?{iconName:e,iconColor:s,iconWidth:o,iconHeight:o}:{iconName:e,iconColor:s,iconWidth:i,iconHeight:t}}const p=new Intl.ListFormat(navigator.language,{type:"unit",style:"short"});class g extends HTMLElement{static litTagName=o.literal`devtools-issue-counter`;#e=this.attachShadow({mode:"open"});#s=void 0;#i=void 0;#t="";#o;#n=[0,0,0];#r="OmitEmpty";#a=void 0;#l=void 0;#u;#c=!1;scheduleUpdate(){this.#o?this.#o.schedule((async()=>this.#h())):this.#h()}connectedCallback(){this.#e.adoptedStyleSheets=[l]}set data(s){this.#s=s.clickHandler,this.#t=s.leadingText??"",this.#i=s.tooltipCallback,this.#r=s.displayMode??"OmitEmpty",this.#l=s.accessibleName,this.#u=s.throttlerTimeout,this.#c=Boolean(s.compact),this.#a!==s.issuesManager&&(this.#a?.removeEventListener("IssuesCountUpdated",this.scheduleUpdate,this),this.#a=s.issuesManager,this.#a.addEventListener("IssuesCountUpdated",this.scheduleUpdate,this)),0!==s.throttlerTimeout?this.#o=new e.Throttler.Throttler(s.throttlerTimeout??100):this.#o=void 0,this.scheduleUpdate()}get data(){return{clickHandler:this.#s,leadingText:this.#t,tooltipCallback:this.#i,displayMode:this.#r,accessibleName:this.#l,throttlerTimeout:this.#u,compact:this.#c,issuesManager:this.#a}}#h(){if(!this.#a)return;this.#n=[this.#a.numberOfIssues(i.Issue.IssueKind.PageError),this.#a.numberOfIssues(i.Issue.IssueKind.BreakingChange),this.#a.numberOfIssues(i.Issue.IssueKind.Improvement)];const e=[i.Issue.IssueKind.PageError,i.Issue.IssueKind.BreakingChange,i.Issue.IssueKind.Improvement][this.#n.findIndex((e=>e>0))??2],s=(s,i)=>{switch(this.#r){case"OmitEmpty":return i>0?`${i}`:void 0;case"ShowAlways":return`${i}`;case"OnlyMostImportant":return s===e?`${i}`:void 0}},t="2ex",n={groups:[{...m(d(i.Issue.IssueKind.PageError),t),text:s(i.Issue.IssueKind.PageError,this.#n[0])},{...m(d(i.Issue.IssueKind.BreakingChange),t),text:s(i.Issue.IssueKind.BreakingChange,this.#n[1])},{...m(d(i.Issue.IssueKind.Improvement),t),text:s(i.Issue.IssueKind.Improvement,this.#n[2])}],clickHandler:this.#s,leadingText:this.#t,accessibleName:this.#l,compact:this.#c};o.render(o.html`
        <icon-button .data=${n} .accessibleName=${this.#l}></icon-button>
        `,this.#e,{host:this}),this.#i?.()}}t.CustomElements.defineComponent("devtools-issue-counter",g);var I=Object.freeze({__proto__:null,getIssueKindIconData:d,getIssueCountsEnumeration:function(e,s=!0){const t=[e.numberOfIssues(i.Issue.IssueKind.PageError),e.numberOfIssues(i.Issue.IssueKind.BreakingChange),e.numberOfIssues(i.Issue.IssueKind.Improvement)],o=[h(u.pageErrors,{issueCount:t[0]}),h(u.breakingChanges,{issueCount:t[1]}),h(u.possibleImprovements,{issueCount:t[2]})];return p.format(o.filter(((e,i)=>!s||t[i]>0)))},IssueCounter:g});const v=new CSSStyleSheet;v.replaceSync(':host{display:inline-block;white-space:nowrap;color:inherit;font-size:inherit;font-family:inherit}:host([hidden]){display:none}button{border:none;background:transparent;margin:0;padding:0;&.link{cursor:pointer;& > span{color:var(--sys-color-primary)}}}devtools-icon{width:16px;height:16px;vertical-align:middle;&[name="issue-cross-filled"]{color:var(--icon-error)}&[name="issue-exclamation-filled"]{color:var(--icon-warning)}&[name="issue-text-filled"]{color:var(--icon-info)}}@media (forced-colors: active){devtools-icon{color:ButtonText}}\n/*# sourceURL=issueLinkIcon.css */\n');const k={clickToShowIssue:"Click to show issue in the issues tab",clickToShowIssueWithTitle:"Click to open the issue tab and show issue: {title}",issueUnavailable:"Issue unavailable at this time"},b=s.i18n.registerUIStrings("ui/components/issue_counter/IssueLinkIcon.ts",k),C=s.i18n.getLocalizedString.bind(void 0,b),f=r.RenderCoordinator.RenderCoordinator.instance();class w extends HTMLElement{static litTagName=o.literal`devtools-issue-link-icon`;#e=this.attachShadow({mode:"open"});#d;#m=null;#p;#g;#I;#v=e.Revealer.reveal;set data(e){if(this.#d=e.issue,this.#p=e.issueId,this.#g=e.issueResolver,!this.#d){if(!this.#p)throw new Error("Either `issue` or `issueId` must be provided");if(!this.#g)throw new Error("An `IssueResolver` must be provided if an `issueId` is provided.")}this.#I=e.additionalOnClickAction,e.revealOverride&&(this.#v=e.revealOverride),this.#k(),this.#h()}async#k(){if(!this.#d&&this.#p)try{this.#d=await(this.#g?.waitFor(this.#p))}catch{this.#d=null}const e=this.#d?.getDescription();if(e){const s=await i.MarkdownIssueDescription.getIssueTitleFromMarkdownDescription(e);s&&(this.#m=s)}await this.#h()}connectedCallback(){this.#e.adoptedStyleSheets=[v]}get data(){return{issue:this.#d,issueId:this.#p,issueResolver:this.#g,additionalOnClickAction:this.#I,revealOverride:this.#v!==e.Revealer.reveal?this.#v:void 0}}handleClick(e){0===e.button&&(this.#d&&this.#v(this.#d),this.#I?.(),e.consume())}#b(){return this.#m?C(k.clickToShowIssueWithTitle,{title:this.#m}):this.#d?C(k.clickToShowIssue):C(k.issueUnavailable)}#C(){if(!this.#d)return"issue-questionmark-filled";const{iconName:e}=d(this.#d.getKind());return e}#h(){return f.write((()=>{o.render(o.html`
      <button class=${o.Directives.classMap({link:Boolean(this.#d)})}
              title=${this.#b()}
              jslog=${a.link().track({click:!0}).context("issue-link")}
              @click=${this.handleClick}>
        <${n.Icon.Icon.litTagName} name=${this.#C()}></${n.Icon.Icon.litTagName}>
      </span>`,this.#e,{host:this})}))}}t.CustomElements.defineComponent("devtools-issue-link-icon",w);var T=Object.freeze({__proto__:null,extractShortPath:e=>(/[^/]+$/.exec(e)||/[^/]+\/$/.exec(e)||[""])[0],IssueLinkIcon:w});export{I as IssueCounter,T as IssueLinkIcon};

import*as e from"../../core/i18n/i18n.js";import*as t from"../../ui/legacy/legacy.js";import*as i from"../../core/common/common.js";import*as n from"../../core/root/root.js";const o={devices:"Devices",showDevices:"Show Devices"},s=e.i18n.registerUIStrings("panels/settings/emulation/emulation-meta.ts",o),r=e.i18n.getLazilyComputedLocalizedString.bind(void 0,s);let a;t.ViewManager.registerViewExtension({location:"settings-view",commandPrompt:r(o.showDevices),title:r(o.devices),order:30,loadView:async()=>new((await async function(){return a||(a=await import("./emulation/emulation.js")),a}()).DevicesSettingsTab.DevicesSettingsTab),id:"devices",settings:["standardEmulatedDeviceList","customEmulatedDeviceList"]});const c={shortcuts:"Shortcuts",preferences:"Preferences",experiments:"Experiments",ignoreList:"Ignore List",showShortcuts:"Show Shortcuts",showPreferences:"Show Preferences",showExperiments:"Show Experiments",showIgnoreList:"Show Ignore List",settings:"Settings",documentation:"Documentation"},g=e.i18n.registerUIStrings("panels/settings/settings-meta.ts",c),d=e.i18n.getLazilyComputedLocalizedString.bind(void 0,g);let m;async function w(){return m||(m=await import("./settings.js")),m}t.ViewManager.registerViewExtension({location:"settings-view",id:"preferences",title:d(c.preferences),commandPrompt:d(c.showPreferences),order:0,loadView:async()=>new((await w()).SettingsScreen.GenericSettingsTab)}),t.ViewManager.registerViewExtension({location:"settings-view",id:"experiments",title:d(c.experiments),commandPrompt:d(c.showExperiments),order:3,experiment:n.Runtime.ExperimentName.ALL,loadView:async()=>new((await w()).SettingsScreen.ExperimentsSettingsTab)}),t.ViewManager.registerViewExtension({location:"settings-view",id:"blackbox",title:d(c.ignoreList),commandPrompt:d(c.showIgnoreList),order:4,loadView:async()=>new((await w()).FrameworkIgnoreListSettingsTab.FrameworkIgnoreListSettingsTab)}),t.ViewManager.registerViewExtension({location:"settings-view",id:"keybinds",title:d(c.shortcuts),commandPrompt:d(c.showShortcuts),order:100,loadView:async()=>new((await w()).KeybindsSettingsTab.KeybindsSettingsTab)}),t.ActionRegistration.registerActionExtension({category:t.ActionRegistration.ActionCategory.SETTINGS,actionId:"settings.show",title:d(c.settings),loadActionDelegate:async()=>new((await w()).SettingsScreen.ActionDelegate),iconClass:"gear",bindings:[{shortcut:"F1",keybindSets:["devToolsDefault"]},{shortcut:"Shift+?"},{platform:"windows,linux",shortcut:"Ctrl+,",keybindSets:["vsCode"]},{platform:"mac",shortcut:"Meta+,",keybindSets:["vsCode"]}]}),t.ActionRegistration.registerActionExtension({category:t.ActionRegistration.ActionCategory.SETTINGS,actionId:"settings.documentation",title:d(c.documentation),loadActionDelegate:async()=>new((await w()).SettingsScreen.ActionDelegate)}),t.ActionRegistration.registerActionExtension({category:t.ActionRegistration.ActionCategory.SETTINGS,actionId:"settings.shortcuts",title:d(c.showShortcuts),loadActionDelegate:async()=>new((await w()).SettingsScreen.ActionDelegate),bindings:[{platform:"windows,linux",shortcut:"Ctrl+K Ctrl+S",keybindSets:["vsCode"]},{platform:"mac",shortcut:"Meta+K Meta+S",keybindSets:["vsCode"]}]}),t.ViewManager.registerLocationResolver({name:"settings-view",category:t.ViewManager.ViewLocationCategory.SETTINGS,loadResolver:async()=>(await w()).SettingsScreen.SettingsScreen.instance()}),i.Revealer.registerRevealer({contextTypes:()=>[i.Settings.Setting,n.Runtime.Experiment],destination:void 0,loadRevealer:async()=>new((await w()).SettingsScreen.Revealer)}),t.ContextMenu.registerItem({location:t.ContextMenu.ItemLocation.MAIN_MENU_FOOTER,actionId:"settings.shortcuts",order:void 0}),t.ContextMenu.registerItem({location:t.ContextMenu.ItemLocation.MAIN_MENU_HELP_DEFAULT,actionId:"settings.documentation",order:void 0});

import*as e from"../../core/i18n/i18n.js";import*as n from"../../ui/legacy/legacy.js";let t;const i={changes:"Changes",showChanges:"Show Changes",revertAllChangesToCurrentFile:"Revert all changes to current file",copyAllChangesFromCurrentFile:"Copy all changes from current file"},a=e.i18n.registerUIStrings("panels/changes/changes-meta.ts",i),o=e.i18n.getLazilyComputedLocalizedString.bind(void 0,a);async function s(){return t||(t=await import("./changes.js")),t}function r(e){return void 0===t?[]:e(t)}n.ViewManager.registerViewExtension({location:"drawer-view",id:"changes.changes",title:o(i.changes),commandPrompt:o(i.showChanges),persistence:"closeable",loadView:async()=>new((await s()).ChangesView.ChangesView)}),n.ActionRegistration.registerActionExtension({actionId:"changes.revert",category:n.ActionRegistration.ActionCategory.CHANGES,title:o(i.revertAllChangesToCurrentFile),iconClass:"undo",loadActionDelegate:async()=>new((await s()).ChangesView.ActionDelegate),contextTypes:()=>r((e=>[e.ChangesView.ChangesView]))}),n.ActionRegistration.registerActionExtension({actionId:"changes.copy",category:n.ActionRegistration.ActionCategory.CHANGES,title:o(i.copyAllChangesFromCurrentFile),iconClass:"copy",loadActionDelegate:async()=>new((await s()).ChangesView.ActionDelegate),contextTypes:()=>r((e=>[e.ChangesView.ChangesView]))});

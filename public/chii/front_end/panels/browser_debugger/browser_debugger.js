import*as e from"../../core/sdk/sdk.js";import*as t from"../../ui/visual_logging/visual_logging.js";import*as i from"../../core/i18n/i18n.js";import*as n from"../sources/sources.js";import*as o from"../../ui/legacy/legacy.js";import*as s from"../../core/common/common.js";import*as r from"../event_listeners/event_listeners.js";const a=new CSSStyleSheet;a.replaceSync(':host{margin:0;padding:2px 4px;min-height:18px}.tree-outline{padding:0}.tree-outline li{margin-left:14px;user-select:text}.tree-outline li.parent{margin-left:1px}.tree-outline li:not(.parent)::before{display:none}.breakpoint-hit{background-color:var(--sys-color-yellow-container);color:var(--sys-color-on-yellow-container)}.breakpoint-hit .breakpoint-hit-marker{background-color:var(--sys-color-yellow-container);border-right:3px solid var(--sys-color-yellow-outline);color:var(--sys-color-on-yellow-container);height:100%;left:0;margin-left:-30px;position:absolute;right:-4px;z-index:-1}.source-code[is="dt-checkbox"]{max-width:100%}\n/*# sourceURL=categorizedBreakpointsSidebarPane.css */\n');const l={auctionWorklet:"Ad Auction Worklet",animation:"Animation",breakpointHit:"breakpoint hit",canvas:"Canvas",clipboard:"Clipboard",control:"Control",device:"Device",domMutation:"DOM Mutation",dragDrop:"Drag / drop",geolocation:"Geolocation",keyboard:"Keyboard",load:"Load",media:"Media",mouse:"Mouse",notification:"Notification",parse:"Parse",pictureinpicture:"Picture-in-Picture",pointer:"Pointer",script:"Script",sharedStorageWorklet:"Shared Storage Worklet",timer:"Timer",touch:"Touch",trustedTypeViolations:"Trusted Type Violations",webaudio:"WebAudio",window:"Window",worker:"Worker",xhr:"XHR"},d=i.i18n.registerUIStrings("panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts",l),c=i.i18n.getLocalizedString.bind(void 0,d),h=i.i18n.getLazilyComputedLocalizedString.bind(void 0,d);class p extends o.Widget.VBox{#e;#t;#i;#n;#o;#s;constructor(t,n,s){super(!0),this.#e=new o.TreeOutline.TreeOutlineInShadow,this.#e.setShowSelectionOnKeyboardFocus(!0),this.contentElement.appendChild(this.#e.element),this.#t=n,this.#i=s;const r=[...new Set(t.map((e=>e.category())))].sort(((e,t)=>{const n=b(e),o=b(t);return n.localeCompare(o,i.DevToolsLocale.DevToolsLocale.instance().locale)}));this.#n=new Map;for(const e of r)this.createCategory(e);if(r.length>0){const e=this.#n.get(r[0]);e&&e.element.select()}this.#o=new Map;for(const e of t)this.createBreakpoint(e);e.TargetManager.TargetManager.instance().addModelListener(e.DebuggerModel.DebuggerModel,e.DebuggerModel.Events.DebuggerPaused,this.update,this),e.TargetManager.TargetManager.instance().addModelListener(e.DebuggerModel.DebuggerModel,e.DebuggerModel.Events.DebuggerResumed,this.update,this),o.Context.Context.instance().addFlavorChangeListener(e.Target.Target,this.update,this)}get categories(){return this.#n}get breakpoints(){return this.#o}focus(){this.#e.forceSelect()}handleSpaceKeyEventOnBreakpoint(e,t){e&&" "===e.key&&(t&&t.checkbox.click(),e.consume(!0))}createCategory(e){const t=o.UIUtils.CheckboxLabel.create(b(e),void 0,void 0,e);t.checkboxElement.addEventListener("click",this.categoryCheckboxClicked.bind(this,e),!0),t.checkboxElement.tabIndex=-1;const i=new o.TreeOutline.TreeElement(t,void 0,e);i.listItemElement.addEventListener("keydown",(t=>{this.handleSpaceKeyEventOnBreakpoint(t,this.#n.get(e))})),t.checkboxElement.addEventListener("keydown",(t=>{i.listItemElement.focus(),this.handleSpaceKeyEventOnBreakpoint(t,this.#n.get(e))})),o.ARIAUtils.setChecked(i.listItemElement,!1),this.#e.appendChild(i),this.#n.set(e,{element:i,checkbox:t.checkboxElement})}createBreakpoint(e){const t=o.UIUtils.CheckboxLabel.create(n.CategorizedBreakpointL10n.getLocalizedBreakpointName(e.name),void 0,void 0,e.name);t.classList.add("source-code"),t.checkboxElement.addEventListener("click",this.breakpointCheckboxClicked.bind(this,e),!0),t.checkboxElement.tabIndex=-1;const i=new o.TreeOutline.TreeElement(t,void 0,e.name);i.listItemElement.addEventListener("keydown",(t=>{this.handleSpaceKeyEventOnBreakpoint(t,this.#o.get(e))})),t.checkboxElement.addEventListener("keydown",(t=>{i.listItemElement.focus(),this.handleSpaceKeyEventOnBreakpoint(t,this.#o.get(e))})),o.ARIAUtils.setChecked(i.listItemElement,!1),i.listItemElement.createChild("div","breakpoint-hit-marker");const s=this.#n.get(e.category());s&&s.element.appendChild(i),this.#o.set(e,{element:i,checkbox:t.checkboxElement})}getBreakpointFromPausedDetails(e){return null}update(){const t=o.Context.Context.instance().flavor(e.Target.Target),i=t?t.model(e.DebuggerModel.DebuggerModel):null,n=i?i.debuggerPausedDetails():null;if(!n||n.reason!==this.#i||!n.auxData)return void(this.#s&&(o.ARIAUtils.setDescription(this.#s,""),this.#s.classList.remove("breakpoint-hit"),this.#s=void 0));const s=this.getBreakpointFromPausedDetails(n);if(!s)return;o.ViewManager.ViewManager.instance().showView(this.#t);const r=this.#n.get(s.category());r&&r.element.expand();const a=this.#o.get(s);a&&(this.#s=a.element.listItemElement,o.ARIAUtils.setDescription(this.#s,c(l.breakpointHit)),this.#s.classList.add("breakpoint-hit"))}categoryCheckboxClicked(e){const t=this.#n.get(e);if(!t)return;const i=t.checkbox.checked;o.ARIAUtils.setChecked(t.element.listItemElement,i);for(const[t,n]of this.#o)if(t.category()===e){const e=this.#o.get(t);e&&(e.checkbox.checked=i,this.toggleBreakpoint(t,i),o.ARIAUtils.setChecked(n.element.listItemElement,i))}}toggleBreakpoint(e,t){e.setEnabled(t)}breakpointCheckboxClicked(e){const t=this.#o.get(e);if(!t)return;this.toggleBreakpoint(e,t.checkbox.checked),o.ARIAUtils.setChecked(t.element.listItemElement,t.checkbox.checked);let i=!1,n=!1;for(const t of this.#o.keys())t.category()===e.category()&&(t.enabled()?i=!0:n=!0);const s=this.#n.get(e.category());s&&(s.checkbox.checked=i,s.checkbox.indeterminate=i&&n,s.checkbox.indeterminate?o.ARIAUtils.setCheckboxAsIndeterminate(s.element.listItemElement):o.ARIAUtils.setChecked(s.element.listItemElement,i))}wasShown(){super.wasShown(),this.#e.registerCSSFiles([a])}}const g={Animation:h(l.animation),AuctionWorklet:h(l.auctionWorklet),Canvas:h(l.canvas),Clipboard:h(l.clipboard),Control:h(l.control),Device:h(l.device),DomMutation:h(l.domMutation),DragDrop:h(l.dragDrop),Geolocation:h(l.geolocation),Keyboard:h(l.keyboard),Load:h(l.load),Media:h(l.media),Mouse:h(l.mouse),Notification:h(l.notification),Parse:h(l.parse),PictureInPicture:h(l.pictureinpicture),Pointer:h(l.pointer),Script:h(l.script),SharedStorageWorklet:h(l.sharedStorageWorklet),Timer:h(l.timer),Touch:h(l.touch),TrustedTypeViolation:h(l.trustedTypeViolations),WebAudio:h(l.webaudio),Window:h(l.window),Worker:h(l.worker),Xhr:h(l.xhr)};function b(e){return g[e]()}var u=Object.freeze({__proto__:null,CSPViolationBreakpointsSidebarPane:class extends p{constructor(){super(e.DOMDebuggerModel.DOMDebuggerManager.instance().cspViolationBreakpoints(),"sources.cspViolationBreakpoints","CSPViolation"),this.contentElement.setAttribute("jslog",`${t.pane().context("debugger-csp-breakpoints")}`)}getBreakpointFromPausedDetails(t){const i=t.auxData&&t.auxData.violationType?t.auxData.violationType:"",n=e.DOMDebuggerModel.DOMDebuggerManager.instance().cspViolationBreakpoints().find((e=>e.type()===i));return n||null}toggleBreakpoint(t,i){t.setEnabled(i),e.DOMDebuggerModel.DOMDebuggerManager.instance().updateCSPViolationBreakpoints()}}});const k=new CSSStyleSheet;k.replaceSync(".breakpoint-list{padding-bottom:3px}.breakpoint-list .dom-breakpoint > div{overflow:hidden;text-overflow:ellipsis}.breakpoint-entry{display:flex;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;padding:2px 0}.breakpoint-entry:focus-visible{background-color:var(--sys-color-tonal-container)}.breakpoint-list .breakpoint-entry:not(:focus-visible):hover{background-color:var(--sys-color-state-hover-on-subtle)}.breakpoint-hit{background-color:var(--sys-color-neutral-container);color:var(--sys-color-on-surface)}@media (forced-colors: active){.breakpoint-entry:focus-visible,\n  .breakpoint-list .breakpoint-entry:hover{forced-color-adjust:none;background-color:Highlight}.breakpoint-entry:focus-visible *,\n  .breakpoint-list .breakpoint-entry:hover *{color:HighlightText}}\n/*# sourceURL=domBreakpointsSidebarPane.css */\n");const m={noBreakpoints:"No breakpoints",domBreakpointsList:"DOM Breakpoints list",sS:"{PH1}: {PH2}",sSS:"{PH1}: {PH2}, {PH3}",checked:"checked",unchecked:"unchecked",sBreakpointHit:"{PH1} breakpoint hit",breakpointHit:"breakpoint hit",revealDomNodeInElementsPanel:"Reveal DOM node in Elements panel",removeBreakpoint:"Remove breakpoint",removeAllDomBreakpoints:"Remove all DOM breakpoints",subtreeModified:"Subtree modified",attributeModified:"Attribute modified",nodeRemoved:"Node removed",breakOn:"Break on",breakpointRemoved:"Breakpoint removed",breakpointSet:"Breakpoint set"},v=i.i18n.registerUIStrings("panels/browser_debugger/DOMBreakpointsSidebarPane.ts",m),M=i.i18n.getLocalizedString.bind(void 0,v),x=i.i18n.getLazilyComputedLocalizedString.bind(void 0,v);let f;class D extends o.Widget.VBox{elementToCheckboxes;#r;#o;#a;#l;constructor(){super(!0),this.elementToCheckboxes=new WeakMap,this.contentElement.setAttribute("jslog",`${t.pane().context("debugger-dom-breakpoints")}`),this.#r=this.contentElement.createChild("div","gray-info-message"),this.#r.textContent=M(m.noBreakpoints),this.#o=new o.ListModel.ListModel,this.#a=new o.ListControl.ListControl(this.#o,this,o.ListControl.ListMode.NonViewport),this.contentElement.appendChild(this.#a.element),this.#a.element.classList.add("breakpoint-list","hidden"),o.ARIAUtils.markAsList(this.#a.element),o.ARIAUtils.setLabel(this.#a.element,M(m.domBreakpointsList)),this.#r.tabIndex=-1,e.TargetManager.TargetManager.instance().addModelListener(e.DOMDebuggerModel.DOMDebuggerModel,e.DOMDebuggerModel.Events.DOMBreakpointAdded,this.breakpointAdded,this),e.TargetManager.TargetManager.instance().addModelListener(e.DOMDebuggerModel.DOMDebuggerModel,e.DOMDebuggerModel.Events.DOMBreakpointToggled,this.breakpointToggled,this),e.TargetManager.TargetManager.instance().addModelListener(e.DOMDebuggerModel.DOMDebuggerModel,e.DOMDebuggerModel.Events.DOMBreakpointsRemoved,this.breakpointsRemoved,this);for(const t of e.TargetManager.TargetManager.instance().models(e.DOMDebuggerModel.DOMDebuggerModel)){t.retrieveDOMBreakpoints();for(const e of t.domBreakpoints())this.addBreakpoint(e)}this.#l=null,this.update()}static instance(){return f||(f=new D),f}createElementForItem(e){const i=document.createElement("div");i.classList.add("breakpoint-entry"),i.setAttribute("jslog",`${t.domBreakpoint().context(e.type)}`),i.addEventListener("contextmenu",this.contextMenu.bind(this,e),!0),o.ARIAUtils.markAsListitem(i),i.tabIndex=-1;const n=o.UIUtils.CheckboxLabel.create(void 0,e.enabled),r=n.checkboxElement;r.addEventListener("click",this.checkboxClicked.bind(this,e),!1),r.tabIndex=-1,this.elementToCheckboxes.set(i,r),i.appendChild(n),i.addEventListener("keydown",(e=>{" "===e.key&&(n.checkboxElement.click(),e.consume(!0))}));const a=document.createElement("div");a.classList.add("dom-breakpoint"),i.appendChild(a);const l=document.createElement("div"),d=B.get(e.type);l.textContent=d?d():null;const c=d?d():"";o.ARIAUtils.setLabel(r,c),r.setAttribute("jslog",`${t.toggle().track({click:!0})}`);const h=e.enabled?M(m.checked):M(m.unchecked),p=document.createElement("monospace");return p.style.display="block",a.appendChild(p),s.Linkifier.Linkifier.linkify(e.node,{preventKeyboardFocus:!0,tooltip:void 0}).then((e=>{p.appendChild(e),o.ARIAUtils.setLabel(r,M(m.sS,{PH1:c,PH2:e.deepTextContent()})),o.ARIAUtils.setLabel(i,M(m.sSS,{PH1:c,PH2:e.deepTextContent(),PH3:h}))})),a.appendChild(l),e===this.#l?(i.classList.add("breakpoint-hit"),o.ARIAUtils.setDescription(i,M(m.sBreakpointHit,{PH1:h})),o.ARIAUtils.setDescription(r,M(m.breakpointHit))):o.ARIAUtils.setDescription(i,h),this.#r.classList.add("hidden"),this.#a.element.classList.remove("hidden"),i}heightForItem(e){return 0}isItemSelectable(e){return!0}updateSelectedItemARIA(e,t){return!0}selectedItemChanged(e,t,i,n){i&&(i.tabIndex=-1),n&&(this.setDefaultFocusedElement(n),n.tabIndex=0,this.hasFocus()&&n.focus())}breakpointAdded(e){this.addBreakpoint(e.data)}breakpointToggled(e){const t=this.hasFocus(),i=e.data;this.#a.refreshItem(i),t&&this.focus()}breakpointsRemoved(e){const t=this.hasFocus(),i=e.data;let n=-1;for(const e of i){const t=this.#o.indexOf(e);t>=0&&(this.#o.remove(t),n=t)}if(0===this.#o.length)this.#r.classList.remove("hidden"),this.setDefaultFocusedElement(this.#r),this.#a.element.classList.add("hidden");else if(n>=0){const e=this.#o.at(n);e&&this.#a.selectItem(e)}t&&this.focus()}addBreakpoint(e){this.#o.insertWithComparator(e,((e,t)=>e.type>t.type?-1:e.type<t.type?1:0)),this.#a.selectedItem()&&this.hasFocus()||this.#a.selectItem(this.#o.at(0))}contextMenu(e,t){const i=new o.ContextMenu.ContextMenu(t);i.defaultSection().appendItem(M(m.revealDomNodeInElementsPanel),(()=>s.Revealer.reveal(e.node))),i.defaultSection().appendItem(M(m.removeBreakpoint),(()=>{e.domDebuggerModel.removeDOMBreakpoint(e.node,e.type)})),i.defaultSection().appendItem(M(m.removeAllDomBreakpoints),(()=>{e.domDebuggerModel.removeAllDOMBreakpoints()})),i.show()}checkboxClicked(e,t){e.domDebuggerModel.toggleDOMBreakpoint(e,!!t.target&&t.target.checked)}flavorChanged(e){this.update()}update(){const t=o.Context.Context.instance().flavor(e.DebuggerModel.DebuggerPausedDetails);if(this.#l){const e=this.#l;this.#l=null,this.#a.refreshItem(e)}if(!t||!t.auxData||"DOM"!==t.reason)return;const i=t.debuggerModel.target().model(e.DOMDebuggerModel.DOMDebuggerModel);if(!i)return;const n=i.resolveDOMBreakpointData(t.auxData);if(n){for(const e of this.#o)e.node===n.node&&e.type===n.type&&(this.#l=e);this.#l&&this.#a.refreshItem(this.#l),o.ViewManager.ViewManager.instance().showView("sources.domBreakpoints")}}wasShown(){super.wasShown(),this.registerCSSFiles([k])}}const B=new Map([["subtree-modified",x(m.subtreeModified)],["attribute-modified",x(m.attributeModified)],["node-removed",x(m.nodeRemoved)]]);var E=Object.freeze({__proto__:null,DOMBreakpointsSidebarPane:D,ContextMenuProvider:class{appendApplicableItems(t,i,s){if(s.pseudoType())return;const r=s.domModel().target().model(e.DOMDebuggerModel.DOMDebuggerModel);if(!r)return;function a(e){if(!r)return;const t=n.DebuggerPausedMessage.BreakpointTypeNouns.get(e),i=t?t():"";r.hasDOMBreakpoint(s,e)?(r.removeDOMBreakpoint(s,e),o.ARIAUtils.alert(`${M(m.breakpointRemoved)}: ${i}`)):(r.setDOMBreakpoint(s,e),o.ARIAUtils.alert(`${M(m.breakpointSet)}: ${i}`))}const l=i.debugSection().appendSubMenuItem(M(m.breakOn)),d={SubtreeModified:"subtree-modified",AttributeModified:"attribute-modified",NodeRemoved:"node-removed"};for(const e of Object.values(d)){const t=n.DebuggerPausedMessage.BreakpointTypeNouns.get(e);t&&l.defaultSection().appendCheckboxItem(t(),a.bind(null,e),r.hasDOMBreakpoint(s,e))}}}});let C;class w extends p{constructor(){let i=e.DOMDebuggerModel.DOMDebuggerManager.instance().eventListenerBreakpoints();const n=e.EventBreakpointsModel.EventBreakpointsManager.instance().eventListenerBreakpoints();i=i.concat(n),super(i,"sources.eventListenerBreakpoints","EventListener"),this.contentElement.setAttribute("jslog",`${t.pane().context("debugger-event-breakpoints")}`)}static instance(){return C||(C=new w),C}getBreakpointFromPausedDetails(t){const i=t.auxData,n=e.DOMDebuggerModel.DOMDebuggerManager.instance().resolveEventListenerBreakpoint(i);return n||e.EventBreakpointsModel.EventBreakpointsManager.instance().resolveEventListenerBreakpoint(i)}}var y=Object.freeze({__proto__:null,EventListenerBreakpointsSidebarPane:w});const L={refreshGlobalListeners:"Refresh global listeners"},I=i.i18n.registerUIStrings("panels/browser_debugger/ObjectEventListenersSidebarPane.ts",L),S=i.i18n.getLocalizedString.bind(void 0,I);let O;class A extends o.Widget.VBox{#d;#c;#h;constructor(){super(),this.contentElement.setAttribute("jslog",`${t.pane().context("debugger-global-listeners")}`),this.#d=new o.Toolbar.ToolbarButton(S(L.refreshGlobalListeners),"refresh"),this.#d.addEventListener(o.Toolbar.ToolbarButton.Events.Click,this.refreshClick,this),this.#d.setEnabled(!1),this.#c=new r.EventListenersView.EventListenersView(this.update.bind(this),!0),this.#c.show(this.element),this.setDefaultFocusedChild(this.#c)}static instance(){return O||(O=new A),O}get eventListenersView(){return this.#c}toolbarItems(){return[this.#d]}update(){this.#h&&(this.#h.runtimeModel.releaseObjectGroup(R),this.#h=void 0);const t=o.Context.Context.instance().flavor(e.RuntimeModel.ExecutionContext);if(!t)return this.#c.reset(),void this.#c.addEmptyHolderIfNeeded();this.#h=t,Promise.all([this.windowObjectInContext(t)]).then(this.#c.addObjects.bind(this.#c))}wasShown(){super.wasShown(),o.Context.Context.instance().addFlavorChangeListener(e.RuntimeModel.ExecutionContext,this.update,this),this.#d.setEnabled(!0),this.update()}willHide(){super.willHide(),o.Context.Context.instance().removeFlavorChangeListener(e.RuntimeModel.ExecutionContext,this.update,this),this.#d.setEnabled(!1)}windowObjectInContext(e){return e.evaluate({expression:"self",objectGroup:R,includeCommandLineAPI:!1,silent:!0,returnByValue:!1,generatePreview:!1},!1,!1).then((e=>"error"in e||e.exceptionDetails?null:e.object))}refreshClick(e){e.data.consume(),this.update()}}const R="object-event-listeners-sidebar-pane";var T=Object.freeze({__proto__:null,ObjectEventListenersSidebarPane:A,objectGroupName:R});const P=new CSSStyleSheet;P.replaceSync('.breakpoint-list{padding-bottom:3px}.breakpoint-list .editing.being-edited{overflow:hidden;white-space:nowrap}.breakpoint-condition{display:block;margin:4px 8px 4px 23px}.breakpoint-condition-input{display:block;margin-left:0;margin-right:0;border:1px solid var(--sys-color-neutral-outline);border-radius:4px;&:focus{outline:5px auto var(--sys-color-tonal-outline);box-shadow:none}}.breakpoint-entry{white-space:nowrap;padding:2px 0}.breakpoint-list .breakpoint-entry:hover{background-color:var(--sys-color-state-hover-on-subtle)}.breakpoint-list .breakpoint-entry:focus-visible{background-color:var(--sys-color-tonal-container)}.breakpoint-entry [is="dt-checkbox"]{max-width:100%}.breakpoint-hit{background-color:var(--sys-color-yellow-container);border-right:3px solid var(--sys-color-yellow-outline);color:var(--sys-color-on-yellow-container)}@media (forced-colors: active){.breakpoint-list .breakpoint-entry:hover,\n  .breakpoint-list .breakpoint-entry:focus-visible{forced-color-adjust:none;background-color:Highlight}.breakpoint-list .breakpoint-entry:hover *,\n  .breakpoint-list .breakpoint-entry:focus-visible *{color:HighlightText}}\n/*# sourceURL=xhrBreakpointsSidebarPane.css */\n');const U={xhrfetchBreakpoints:"XHR/fetch Breakpoints",noBreakpoints:"No breakpoints",addXhrfetchBreakpoint:"Add XHR/fetch breakpoint",addBreakpoint:"Add breakpoint",breakWhenUrlContains:"Break when URL contains:",urlBreakpoint:"URL Breakpoint",urlContainsS:'URL contains "{PH1}"',anyXhrOrFetch:"Any XHR or fetch",breakpointHit:"breakpoint hit",removeAllBreakpoints:"Remove all breakpoints",removeBreakpoint:"Remove breakpoint"},H=i.i18n.registerUIStrings("panels/browser_debugger/XHRBreakpointsSidebarPane.ts",U),V=i.i18n.getLocalizedString.bind(void 0,H),j=new WeakMap,F=new WeakMap;let _;class W extends o.Widget.VBox{#o;#a;#r;#p;#g;#b;constructor(){super(!0),this.#o=new o.ListModel.ListModel,this.#a=new o.ListControl.ListControl(this.#o,this,o.ListControl.ListMode.NonViewport),this.contentElement.setAttribute("jslog",`${t.pane().context("debugger-xhr-breakpoints")}`),this.contentElement.appendChild(this.#a.element),this.#a.element.classList.add("breakpoint-list","hidden"),o.ARIAUtils.markAsList(this.#a.element),o.ARIAUtils.setLabel(this.#a.element,V(U.xhrfetchBreakpoints)),this.#r=this.contentElement.createChild("div","gray-info-message"),this.#r.textContent=V(U.noBreakpoints),this.#p=new Map,this.#g=new o.Toolbar.ToolbarButton(V(U.addXhrfetchBreakpoint),"plus"),this.#g.addEventListener(o.Toolbar.ToolbarButton.Events.Click,(()=>{this.addButtonClicked()})),this.#r.addEventListener("contextmenu",this.emptyElementContextMenu.bind(this),!0),this.#r.tabIndex=-1,this.restoreBreakpoints(),this.update()}static instance(){return _||(_=new W),_}toolbarItems(){return[this.#g]}emptyElementContextMenu(e){const t=new o.ContextMenu.ContextMenu(e);t.defaultSection().appendItem(V(U.addBreakpoint),this.addButtonClicked.bind(this)),t.show()}async addButtonClicked(){await o.ViewManager.ViewManager.instance().showView("sources.xhrBreakpoints");const t=document.createElement("p");t.classList.add("breakpoint-condition"),t.textContent=V(U.breakWhenUrlContains);const i=t.createChild("span","breakpoint-condition-input");function n(i,n,o){this.removeListElement(t),i&&(e.DOMDebuggerModel.DOMDebuggerManager.instance().addXHRBreakpoint(o,!0),this.setBreakpoint(o)),this.update()}o.ARIAUtils.setLabel(i,V(U.urlBreakpoint)),this.addListElement(t,this.#a.element.firstChild);const s=new o.InplaceEditor.Config(n.bind(this,!0),n.bind(this,!1));o.InplaceEditor.InplaceEditor.startEditing(i,s)}heightForItem(e){return 0}isItemSelectable(e){return!0}setBreakpoint(e){-1!==this.#o.indexOf(e)?this.#a.refreshItem(e):this.#o.insertWithComparator(e,((e,t)=>e>t?1:e<t?-1:0)),this.#a.selectedItem()&&this.hasFocus()||this.#a.selectItem(this.#o.at(0))}createElementForItem(t){const i=document.createElement("div");o.ARIAUtils.markAsListitem(i);const n=i.createChild("div","breakpoint-entry");j.set(i,n);const s=e.DOMDebuggerModel.DOMDebuggerManager.instance().xhrBreakpoints().get(t)||!1;o.ARIAUtils.markAsCheckbox(n),o.ARIAUtils.setChecked(n,s),n.addEventListener("contextmenu",this.contextMenu.bind(this,t),!0);const r=t?V(U.urlContainsS,{PH1:t}):V(U.anyXhrOrFetch),a=o.UIUtils.CheckboxLabel.create(r,s);return o.ARIAUtils.markAsHidden(a),o.ARIAUtils.setLabel(n,r),n.appendChild(a),a.checkboxElement.addEventListener("click",this.checkboxClicked.bind(this,t,s),!1),n.addEventListener("click",(e=>{e.target===n&&this.checkboxClicked(t,s)}),!1),F.set(n,a.checkboxElement),a.checkboxElement.tabIndex=-1,n.tabIndex=-1,t===this.#a.selectedItem()&&(n.tabIndex=0,this.setDefaultFocusedElement(n)),n.addEventListener("keydown",(e=>{let i=!1;" "===e.key?(this.checkboxClicked(t,s),i=!0):"Enter"===e.key&&(this.labelClicked(t),i=!0),i&&e.consume(!0)})),t===this.#b&&(n.classList.add("breakpoint-hit"),o.ARIAUtils.setDescription(n,V(U.breakpointHit))),a.classList.add("cursor-auto"),a.textElement.addEventListener("dblclick",this.labelClicked.bind(this,t),!1),this.#p.set(t,i),i}selectedItemChanged(e,t,i,n){if(i){const e=j.get(i);if(!e)throw new Error("Expected breakpoint entry to be found for an element");e.tabIndex=-1}if(n){const e=j.get(n);if(!e)throw new Error("Expected breakpoint entry to be found for an element");this.setDefaultFocusedElement(e),e.tabIndex=0,this.hasFocus()&&e.focus()}}updateSelectedItemARIA(e,t){return!0}removeBreakpoint(e){const t=this.#o.indexOf(e);t>=0&&this.#o.remove(t),this.#p.delete(e),this.update()}addListElement(e,t){this.#a.element.insertBefore(e,t),this.#r.classList.add("hidden"),this.#a.element.classList.remove("hidden")}removeListElement(e){this.#a.element.removeChild(e),this.#a.element.firstElementChild||(this.#r.classList.remove("hidden"),this.#a.element.classList.add("hidden"))}contextMenu(t,i){const n=new o.ContextMenu.ContextMenu(i);const s=V(U.removeAllBreakpoints);n.defaultSection().appendItem(V(U.addBreakpoint),this.addButtonClicked.bind(this)),n.defaultSection().appendItem(V(U.removeBreakpoint),function(){e.DOMDebuggerModel.DOMDebuggerManager.instance().removeXHRBreakpoint(t),this.removeBreakpoint(t)}.bind(this)),n.defaultSection().appendItem(s,function(){for(const t of this.#p.keys())e.DOMDebuggerModel.DOMDebuggerManager.instance().removeXHRBreakpoint(t),this.removeBreakpoint(t);this.update()}.bind(this)),n.show()}checkboxClicked(t,i){const n=this.hasFocus();e.DOMDebuggerModel.DOMDebuggerManager.instance().toggleXHRBreakpoint(t,!i),this.#a.refreshItem(t),this.#a.selectItem(t),n&&this.focus()}labelClicked(t){const i=this.#p.get(t),n=document.createElement("span");function s(o,s,r){if(this.removeListElement(n),o){e.DOMDebuggerModel.DOMDebuggerManager.instance().removeXHRBreakpoint(t),this.removeBreakpoint(t);let n=!0;if(i){const e=j.get(i),t=e?F.get(e):void 0;t&&(n=t.checked)}e.DOMDebuggerModel.DOMDebuggerManager.instance().addXHRBreakpoint(r,n),this.setBreakpoint(r),this.#a.selectItem(r)}else i&&i.classList.remove("hidden");this.focus()}n.classList.add("breakpoint-condition"),n.textContent=t,i&&(this.#a.element.insertBefore(n,i),i.classList.add("hidden"));const r=new o.InplaceEditor.Config(s.bind(this,!0),s.bind(this,!1));o.InplaceEditor.InplaceEditor.startEditing(n,r)}flavorChanged(e){this.update()}update(){const t=0===this.#o.length;this.#a.element.classList.toggle("hidden",t),this.#r.classList.toggle("hidden",!t);const i=o.Context.Context.instance().flavor(e.DebuggerModel.DebuggerPausedDetails);if(!i||"XHR"!==i.reason){if(this.#b){const e=this.#b;this.#b=void 0,this.#o.indexOf(e)>=0&&this.#a.refreshItem(e)}return}const n=i.auxData&&i.auxData.breakpointURL;this.#b=n,this.#o.indexOf(n)<0||(this.#a.refreshItem(n),o.ViewManager.ViewManager.instance().showView("sources.xhrBreakpoints"))}restoreBreakpoints(){const t=e.DOMDebuggerModel.DOMDebuggerManager.instance().xhrBreakpoints();for(const e of t.keys())this.setBreakpoint(e)}wasShown(){super.wasShown(),this.registerCSSFiles([P])}}var X=Object.freeze({__proto__:null,XHRBreakpointsSidebarPane:W});export{u as CSPViolationBreakpointsSidebarPane,E as DOMBreakpointsSidebarPane,y as EventListenerBreakpointsSidebarPane,T as ObjectEventListenersSidebarPane,X as XHRBreakpointsSidebarPane};
